/*
  ludumpad-client - v0.0.1 - 2013-10-28
  Copyright(c) 2013 David da Silva Cont√≠n <daviddasilvacontin@me.com> MIT Licensed
*/

function getParameterByName(a){var b=RegExp("[?&]"+a+"=([^&]*)").exec(window.location.search);return b&&decodeURIComponent(b[1].replace(/\+/g," "))}!function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b){var c=(new Date).getTime(),d=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+d)},d);return a=c+d,e}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)})}(),Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d&&a?this:a,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}),window.TweenLite||(window.TweenLite={},TweenLite.to=function(a,b,c){for(var d in c)"onComplete"==d?setTimeout(function(){c.onComplete()},1e3*b):a[d]=c[d]},window.Power4={ease:0});var _={},slice=Array.prototype.slice,nativeForEach=Array.prototype.forEach,each=_.each=_.forEach=function(a,b,c){if(null!=a)if(nativeForEach&&a.forEach===nativeForEach)a.forEach(b,c);else if(a.length===+a.length){for(var d=0,e=a.length;e>d;d++)if(b.call(c,a[d],d,a)===breaker)return}else for(var f=_.keys(a),d=0,e=f.length;e>d;d++)if(b.call(c,a[f[d]],f[d],a)===breaker)return};_.extend=function(a){return each(slice.call(arguments,1),function(b){if(b)for(var c in b)a[c]=b[c]}),a},CanvasRenderingContext2D.prototype.roundRect=function(a,b,c,d,e){return 2*e>c&&(e=c/2),2*e>d&&(e=d/2),this.beginPath(),this.moveTo(a+e,b),this.arcTo(a+c,b,a+c,b+d,e),this.arcTo(a+c,b+d,a,b+d,e),this.arcTo(a,b+d,a,b,e),this.arcTo(a,b,a+c,b,e),this.closePath(),this};var LudumPad={debug:!1,_oldDate:+new Date,_delta:0,version:.1};LudumPad.Colors=["#fe0e63"],LudumPad.MessageTypePacket=-1,LudumPad.MessageTypeGamepadConfiguration=0,LudumPad.MessageTypePingResponse=1,LudumPad.MessageTypeGamepadSyncType=2,LudumPad.GamepadTypeDPAD=0,LudumPad.GamepadTypeJoystick=1,LudumPad.GamepadTypeButtons=2,LudumPad.GamepadConfInputTouches=0,LudumPad.GamepadConfInputGyroscope=1,LudumPad.GamepadConfInputAccelerometer=2,LudumPad.GamepadConfInputPointer=3,LudumPad._logic=function(){requestAnimationFrame(LudumPad._logic);var a=+new Date;this._delta=a-this._oldDate,this.oldDate=a;for(var b=LudumPad.Gamepad._instances,c=0;c<b.length;++c)b[c]._logic(a);for(var d=LudumPad.Channel._instances,c=0;c<d.length;++c)d[c]._logic(a)},LudumPad.StatusCode={OK:0,ChannelNotFound:10,ChannelAlreadyExists:11},LudumPad.debugMode=function(){this.debug=!0},LudumPad.log=function(a){this.debug&&console.log("<LudumPad> "+a)};var dummyf=function(){};LudumPad.Audio={},LudumPad.Audio.Ping=new Audio("../ludumpad-client/im_ping_4.wav"),LudumPad.Audio.Error=new Audio("../ludumpad-client/classic_coin_3.wav"),LudumPad.ObjectWithEvents=function(){},LudumPad.ObjectWithEvents.prototype={on:function(a,b){this["_on"+a.toLowerCase()]=b}},LudumPad.DefaultConnectionConfig=function(){},LudumPad.DefaultConnectionConfig.prototype={channelID:void 0,connected:!1,connecting:!1,host:void 0,hostIndex:0,hostList:["localhost","kipos.me"],port:4242,idSize:4,setOptions:function(a){a&&(a.channelID&&(this.channelID=a.channelID),a.host&&this.hostList.splice(1,0,a.host),a.port&&(this.port=a.port))},generateRandomChannelID:function(){for(var a="xxxx",b="-",c="",d=0;d<this.idSize;++d)0!=d&&(c+=b),c+=a;this.channelID=c.replace(/[x]/g,function(){return(0|16*Math.random()).toString(16)})}},LudumPad.Screen=function(){},LudumPad.Screen.prototype=_.extend(new LudumPad.ObjectWithEvents,{width:window.innerWidth,height:window.innerHeight,_onresize:dummyf}),LudumPad.Screen.prototype.isLocal=function(){this.width=window.innerWidth,this.height=window.innerHeight;var a=this;return $(window).resize(function(){a.setSize({width:window.innerWidth,height:window.innerHeight})}),this},LudumPad.Screen.prototype.setSize=function(a){this.width=a.width,this.height=a.height,this._onresize()},LudumPad.Screen.prototype.packet=function(){return{width:this.width,height:this.height}},LudumPad.LocalScreen=(new LudumPad.Screen).isLocal(),LudumPad.GamepadButton=function(a,b){this.text=a,this.bgcolor=b},LudumPad.GamepadType=function(a){this.type=a},LudumPad.GamepadType.prototype={addButtonToRow:function(a,b){for(void 0==this.buttons&&(this.buttons=[]);b>this.buttons.length-1;)this.buttons.push([]);this.buttons[b].push(a)}},LudumPad.GamepadType.prototype.checkUpdate=function(){switch(this.type){case LudumPad.GamepadTypeDPAD:return void 0==this._old&&(this._old=-1),void 0==this.dpad&&(this.dpad=-1),this._old!=this.dpad?(this._old=this.dpad,this.dpad):(this._old=this.dpad,void 0);case LudumPad.GamepadTypeButtons:var a=this.buttonsSnapshot();void 0==this._old&&(this._old=a);var b=this.equalSnapshots(a,this._old);return this._old=a,b?a:void 0;default:return void 0}},LudumPad.GamepadType.prototype.buttonsSnapshot=function(){void 0==this.buttons&&(this.buttons=[]);for(var a=[],b=0;b<this.buttons.length;++b){for(var c=this.buttons[b],d=[],e=0;e<c.length;++e)d.push(1==c[e].state);a.push(d)}return a},LudumPad.GamepadType.prototype.equalSnapshots=function(a,b){if(a.length!=b.length)return!1;for(var c=0;c<a.length;++c){if(a[c].length!=b[c].length)return!1;for(var d=0;d<a[c].length;++d)if(a[c][d]!=b[c][d])return!1}return!0},LudumPad.GamepadType.prototype.update=function(a){if(void 0!=a)switch(this.type){case LudumPad.GamepadTypeDPAD:this._old=this.dpad,this.dpad=a;break;case LudumPad.GamepadTypeButtons:for(var b=0;b<this.buttons.length;++b)for(var c=this.buttons[b],d=0;d<c.length;++d){var e=this.buttons[b][d];e._old=e.state,e.state=a[b][d]}}},LudumPad.Gamepad=function(){this.touches=[],this.screen=new LudumPad.Screen,this.types=[],this.conf={}},LudumPad.Gamepad.prototype={alias:"Anonymous",index:-1,id:void 0,paused:!1,conf:{},screen:new LudumPad.Screen,gyroscope:{LR:0,FB:0,dir:0},dpad:-1,bgcolor:"#111111",ping:0,_needsTypeSync:!1,setTypes:function(a){this.types=a,this._needsTypeSync=!0}},LudumPad.Gamepad.dir={UP:0,RIGHT:1,DOWN:2,LEFT:3,NONE:-1},LudumPad.Gamepad.dirPoints=[{x:.5,y:0},{x:1,y:.5},{x:.5,y:1},{x:0,y:.5}],LudumPad.Gamepad._instances=[],LudumPad.GamepadClient=function(a){this.setOptions(a),LudumPad.Gamepad._instances.push(this),this.touches=[],this.types=[],this.conf={},document.body.addEventListener("touchmove",function(a){a.preventDefault()},!1),LudumPad.UI.canvas.addEventListener("touchstart",function(a){this.touches=a.touches,this._touched=!0,this._force=!0}.bind(this),!1),document.body.addEventListener("touchmove",function(a){this.touches=a.touches,this._touched=!0}.bind(this),!1),LudumPad.UI.canvas.addEventListener("touchend",function(a){this.touches=a.touches,this._touched=!0,this._force=!0}.bind(this),!1),window.DeviceOrientationEvent&&(LudumPad.log("DeviceOrientation is supported"),window.addEventListener("deviceorientation",this._gyroscopeHandler.bind(this),!1)),this.screen=LudumPad.LocalScreen,this.screen.on("resize",function(){LudumPad.log("this._screenChanged = true"),this._screenChanged=!0}.bind(this))},LudumPad.GamepadClient.prototype=_.extend(new LudumPad.DefaultConnectionConfig,new LudumPad.ObjectWithEvents),LudumPad.GamepadClient.prototype=_.extend(LudumPad.GamepadClient.prototype,LudumPad.Gamepad.prototype),LudumPad.GamepadClient.prototype=_.extend(LudumPad.GamepadClient.prototype,{_touched:!1,_force:!1,_screenChanged:!1,_olddpad:-1,_lastPacket:+new Date,_msSkip:50,_onconnect:dummyf,_onconnectionerror:dummyf,_onchannelpacket:dummyf,_onconfiguration:dummyf,_ontypesync:dummyf,_onconnectionfailed:dummyf,_onconnectionclosed:dummyf,_onchanneldied:dummyf,_lastPingRequest:void 0,connect:function(){return this.connected||this.connecting?!1:(this.connecting=!0,this.host=this.hostList[0],console.log("host is "+this.host),this.socket=io.connect("http://"+this.host+":"+this.port),this.socket.on("connectToChannelCallback",function(a){switch(this.connected=!0,this.connecting=!1,LudumPad.log("connectToChannelCallback. StatusCode: "+a),a){case LudumPad.StatusCode.OK:LudumPad.log("Connected to Channel with id "+this.channelID),new LudumPad.UI.Bubble({msg:"Connected to Channel with id "+this.channelID}),this.ping=+new Date-this._lastPingRequest,this._onconnect(),setInterval(function(){this._pingRequest()}.bind(this),1e3);break;case LudumPad.StatusCode.ChannelNotFound:LudumPad.log("Channel with id "+this.channelID+" not found."),new LudumPad.UI.Bubble({msg:"Channel with id "+this.channelID+" not found",type:"error"}),this._onconnectionerror(a)}}.bind(this)),this.socket.on("connect",function(){LudumPad.log("Connection. Requesting..."),this._lastPingRequest=+new Date,this.socket.emit("connectToChannel",{channel:this.channelID,g:{alias:this.alias,screen:this.screen.packet()}})}.bind(this)),this.socket.on("channelPacket",function(a){switch(a.t){case LudumPad.MessageTypeGamepadConfiguration:if(LudumPad.log("Got conf packet from channel!"),console.log(a),a.p){if(void 0!=a.p.bgcolor&&(this.bgcolor=a.p.bgcolor),void 0!=a.p.index&&(this.index=a.p.index),a.p.conf){this.conf={};for(var b=a.p.conf,c=0;c<b.length;++c)this.conf[b[c]]=!0}a.p.type&&(this.type=a.p.type),this._onconfiguration(a.p)}break;case LudumPad.MessageTypePingResponse:this.ping=Math.floor(this.ping/3+2*((+new Date-this._lastPingRequest)/2)/3);break;case LudumPad.MessageTypePacket:this._onchannelpacket(a.p);break;case LudumPad.MessageTypeGamepadSyncType:LudumPad.log("Got Sync Type Message from Channel"),console.log(a),this.types=[];for(var c=0;c<a.p.length;++c){var d=a.p[c],e=new LudumPad.GamepadType;for(var f in d)e[f]=d[f];this.types.push(e)}this._ontypesync()}}.bind(this)),this.socket.on("connect_failed",function(){(this.connecting||this.connected)&&(new LudumPad.UI.Bubble({type:"error",msg:'Connection to server "'+this.host+'" failed'}),LudumPad.log("connect failed"),this.connecting=!1,this.connected=!1,this._onconnectionfailed())}.bind(this)),this.socket.on("close",function(){LudumPad.log("close"),this.connecting=!1,this.connected=!1,this._onconnectionclosed()}.bind(this)),this.socket.on("channelDied",function(){this.connected=!1,this.connecting=!1,new LudumPad.UI.Bubble({msg:"Channel died. Disconnected.",type:"error"}),this._onchanneldied()}.bind(this)),this)},emitPacket:function(a){this.socket.emit("gamepadPacket",a)},_touchesPacket:function(){for(var a=[],b=0;b<this.touches.length;++b){var c=this.touches[b];a.push({screenX:c.screenX,screenY:c.screenY})}return a},_gyroscopeHandler:function(a){this.gyroscope={LR:a.gamma,FB:a.beta,dir:a.alpha}},_logic:function(a){if(this.connected){var b=this.gyroscope,c=!1,d=a-this._lastPacket>this._msSkip,e={};this._screenChanged&&(c=!0,this._screenChanged=!1,e.s=this.screen.packet());var f=this.paused;if(this.paused=(b.LR>150||b.LR<-150)&&b.FB<25&&b.FB>-25,f!=this.paused&&(c=!0,e.p=this.paused),!this.paused){for(var g=0;g<this.types.length;++g){var h=this.types[g].checkUpdate();void 0!=h&&(c=!0,void 0==e.u&&(e.u=[]),e.u[g]=h)}this.conf[LudumPad.GamepadConfInputTouches]&&(this._force||this._touched&&d)&&(c=!0),this.conf[LudumPad.GamepadConfInputGyroscope]&&d&&(c=!0)}c&&(this.conf[LudumPad.GamepadConfInputTouches]&&(e.t=this._touchesPacket()),this.conf[LudumPad.GamepadConfInputGyroscope]&&(e.g=this.gyroscope),this._lastPacket=a,this._force=!1,this._touched=!1,this.emitPacket(e))}},_updatedpad:function(){if(0==this.touches.length)return-1;for(var a=LudumPad.Gamepad.dirPoints,b=this._distToPoint(a[0]),c=0,d=1;d<a.length;++d){var e=this._distToPoint(a[d]);b>e&&(b=e,c=d)}return c},_distToPoint:function(a){var b=this.touches[0];return Math.sqrt(Math.pow(a.y-b.screenY/this.screen.height,2)+Math.pow(a.x-b.screenX/this.screen.width,2))},_pingRequest:function(){this._lastPingRequest=+new Date,this.emitPacket({ping:1})},setOptions:function(a){a&&(a.channelID&&(this.channelID=a.channelID),a.host&&(this.hostList=[a.host]),a.port&&(this.port=a.port))}}),LudumPad.Channel=function(a){this.setOptions(a),void 0==this.channelID&&this.generateRandomChannelID(),this.gamepadList=[],this.gamepadHash={},LudumPad.Channel._instances.push(this)},LudumPad.Channel.prototype=_.extend(new LudumPad.DefaultConnectionConfig,new LudumPad.ObjectWithEvents),LudumPad.Channel.prototype=_.extend(LudumPad.Channel.prototype,{_onopen:dummyf,_onconnectionerror:function(a){a==LudumPad.StatusCode.ChannelAlreadyExists&&(this.generateRandomChannelID(),this.open())},_ongamepadconnection:dummyf,_ongamepaddisconnection:dummyf,_onpacketfromgamepad:dummyf,_onconnectionfailed:dummyf,_onconnectionclosed:dummyf,paused:!1,open:function(){return this.connected||this.connecting?!1:(this.connecting=!0,this.host=this.hostList[this.hostIndex],this.socket=io.connect("http://"+this.host+":"+this.port),this.socket.on("openChannelCallback",function(a){switch(this.connected=!0,this.connecting=!1,"localhost"==this.host&&(this.host=a.localIP),a.statusCode){case LudumPad.StatusCode.OK:LudumPad.log("Opened channel with ID "+this.channelID),new LudumPad.UI.Bubble({msg:"Successfully opened Channel with id "+this.channelID+" on server "+this.host}),this._onopen();break;case LudumPad.StatusCode.ChannelAlreadyExists:alert("Channel already exists."),this.connecting=!1,this.connected=!1,this._onconnectionerror(a.statusCode)}}.bind(this)),this.socket.on("GamepadConnected",function(a){var b=new LudumPad.Gamepad;LudumPad.log("New gamepad");for(var c in a)"screen"!=c&&(b[c]=a[c]);a.screen&&b.screen.setSize(a.screen);var d=this._firstUndefinedSlot();d>=0?(b.index=d,this.gamepadList[d]=b):(b.index=this.gamepadList.length,this.gamepadList.push(b)),this.gamepadHash[b.id]=b;var e=b.alias+" has connected as Gamepad #"+(b.index+1);LudumPad.log(e),new LudumPad.UI.Bubble({msg:e}),this._ongamepadconnection(b)}.bind(this)),this.socket.on("GamepadDisconnected",function(a){var b=this.gamepadHash[a];this._removeGamepad(b),new LudumPad.UI.Bubble({msg:"Gamepad #"+(b.index+1)+" disconnected.",type:"error"}),this._ongamepaddisconnection(b)}.bind(this)),this.socket.on("gotGamepadPacket",function(a){var b=this.gamepadHash[a.id];if(a.ping)this.emitPacketToGamepads([b],{},1);else{if(void 0!=a.t&&(b.touches=a.t),void 0!=a.s&&b.screen.setSize(a.s),void 0!=a.g&&(b.gyroscope=a.g),void 0!=a.p&&(b.paused=a.p),void 0!=a.u)for(var c=0;c<a.u.length;++c)b.types[c].update(a.u[c]);this._onpacketfromgamepad(a,b)}}.bind(this)),this.socket.on("connect",function(){this.socket.emit("openChannel",this.channelID)}.bind(this)),this.socket.on("connect_failed",function(){(this.connecting||this.connected)&&(new LudumPad.UI.Bubble({type:"error",msg:'Connection to server "'+this.host+'" failed'}),LudumPad.log("connect failed"),this.connecting=!1,this.connected=!1,this._onconnectionfailed(),this.hostIndex+1<this.hostList.length&&(this.hostIndex++,this.open()))}.bind(this)),this.socket.on("close",function(){LudumPad.log("close"),this.connecting=!1,this.connected=!1,this._onconnectionclosed()}.bind(this)),this)},_firstUndefinedSlot:function(){for(var a=this.gamepadList,b=0;b<a.length;++b)if(void 0==a[b])return b;return-1},_removeGamepad:function(a){delete this.gamepadHash[a.id];for(var b=this.gamepadList,c=b.length-1;c>=0;--c)if(b[c]==a)return b[c]=void 0},emitPacketToGamepads:function(a,b,c){void 0==c&&(c=LudumPad.MessageTypePacket);for(var d=[],e=0;e<a.length;++e){var f=a[e].id;f&&d.push(f)}this.socket.emit("packetToGamepads",{t:c,p:b,g:d})},emitConfigurationToGamepads:function(a,b){this.emitPacketToGamepads(a,b,LudumPad.MessageTypeGamepadConfiguration)},forEachGamepad:function(a){for(var b=this.gamepadList,c=0;c<b.length;++c)void 0!=b[c]&&a(b[c])},_sendPing:function(){var a=+new Date;this.emitPacketToGamepads(this.gamepadList,a,LudumPad.MessageTypePingResponse)},_getFirstPausedGamepad:function(){for(var a=0;a<this.gamepadList.length;++a){var b=this.gamepadList[a];if(void 0!=b&&b.paused)return b}return void 0},_logic:function(){var a=void 0!=this._getFirstPausedGamepad();!this.paused&&a&&new LudumPad.UI.PauseCover(this),this.paused=a;for(var b=0;b<this.gamepadList.length;++b){var c=this.gamepadList[b];c._needsTypeSync&&(c._needsTypeSync=!1,this.emitPacketToGamepads([c],c.types,LudumPad.MessageTypeGamepadSyncType),LudumPad.log("Syncing Type with gamepad "+c.id))}}}),LudumPad.Channel._instances=[],LudumPad.UI={},LudumPad.UI.configure=function(a){a.canvas&&(this.canvas=a.canvas),a.ctx&&(this.ctx=a.ctx)},LudumPad.UI._instances=[],LudumPad.UI.render=function(){if(!(this._instances.length<1)){var a=this._instances[0];a.render(this.canvas,this.ctx),a.zombie&&this._instances.splice(0,1)}},LudumPad.UI.PauseCover=function(a){this.channel=a,LudumPad.UI._instances.push(this)},LudumPad.UI.PauseCover.prototype={font:"30px StiffStaff",textColor:"white",init:dummyf,render:function(a,b){if(b.save(),!this.channel.paused)return this.zombie=!0,void 0;var c=this.channel._getFirstPausedGamepad(),d="PAUSED";b.textBaseline="middle",b.font=this.font;var e=b.measureText(d).width;b.fillStyle="black",b.globalAlpha=.5,b.fillRect(0,0,a.width,a.height),b.globalAlpha=1,b.fillStyle=c.color,b.beginPath(),b.arc(a.width/2,a.height/2,e/2+30,0,2*Math.PI,!1),b.fill(),b.fillStyle=this.textColor,console.log(b.font),b.fillText(d,(a.width-e)/2,a.height/2),b.restore()}},LudumPad.UI.Bubble=function(a){if(a&&(a.msg&&(this.msg=a.msg),a.type))switch(this.type=a.type,a.type){case"error":this.bulletColor="#CC0000"}LudumPad.UI._instances.push(this)},LudumPad.UI.Bubble.prototype={msg:"Connected to the server!",height:30,margin:30,cornerRadius:15,idle:1,type:"default",backgroundColor:"white",textColor:"#111111",bulletColor:"#3399FF",zombie:!1,ready:!1,init:function(){switch(this.ready=!0,this.margin=30,this.x=this.margin,this.yoffset=this.margin+this.height,TweenLite.to(this,1,{yoffset:-this.margin,ease:Power4.easeOut,onComplete:function(){setTimeout(function(){TweenLite.to(this,1,{yoffset:this.margin+this.height,ease:Power4.easeOut,onComplete:function(){this.zombie=!0}.bind(this)})}.bind(this),1e3*this.idle)}.bind(this)}),this.type){case"default":LudumPad.Audio.Ping.play();break;case"error":LudumPad.Audio.Error.play()}},render:function(a,b){this.ready||this.init();var c=LudumPad.UI.canvas.height+this.yoffset-this.height;b.save(),b.font="12px sans-serif";var d=3*this.cornerRadius+b.measureText(this.msg).width,e=(a.width-d)/2;b.shadowBlur=10,b.shadowColor="black",b.roundRect(e,c,d,this.height,this.cornerRadius),b.fillStyle=this.backgroundColor,b.fill(),b.shadowBlur=5,b.shadowColor=this.bulletColor,b.beginPath(),b.arc(e+this.cornerRadius,c+this.height/2,5,0,2*Math.PI,!1),b.fillStyle=this.bulletColor,b.fill(),b.fillStyle=this.textColor,b.shadowBlur=0,b.fillText(this.msg,e+2*this.cornerRadius,c+this.cornerRadius+4),b.restore()}},requestAnimationFrame(LudumPad._logic);